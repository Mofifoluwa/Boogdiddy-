database = {}

class Budget():
    def __init__(self, category, amount):
        self.category = category 
        self.amount = amount 
    
    def deposit(ampunt, bal):
        bal += amount
        return bal
        
    def withdraw(user, amount, bal):
        bal -= amount 
        return bal 
    
    def balance(db):
        for categ, bal in db.items():
            print(categ, bal)
    
    def transfer(db, option1, amount, option2):
        value1 = db[option1]
        value2 = db[option2]
        
        db[option1] = int(value1) - amount 
        db[option2] = int(value2) + amount 
        return db 
    
    def init():
        print("Welcome to Boogdiddy Budget\n ")
        menu()
    
    def menu():
        try:
            user = int(input(("Menu -\n1. Create new category\n2. Deposit\n3. Withdrawal\n4. Transfer from one category to another\n5. Show balance\n6. Quit")))
        except:
            print("Invalid input")
            menu()
        
        if (user == 1):
            new_budget()
        
        elif (user == 2):
            credit()
        
        elif (user == 3):
            debit()
            
        elif (user == 4):
            transfer()
            
        elif (user == 5):
            balance()
        
        elif (user == 6):
            out()
        
        else:
            print("Invalid Input")
            menu()
        
    def new_budget():
        print("Creating a new budget.......\n ")
        
        budget_title = input("Enter budget name: \n")
        try:
            amount = int(input("Enter your budget amount\n "))
        except:
            print("Invalid input")
            new_budget()
        budget = Budget(budget_title, amount)
        database[budget_title] = amount 
        print(" ")
        print("Budget succesful")
        menu()
        
    def debit():
        print("Withdraw from a created budget")
        print("Available budgets")
        
        for key, value in database.items():
            print(f"-    {key}")
        
        pick = int(input("\n Press (1) to continue with your debit transaction\n Press (2) to stop your debit transaction\n"))
        if (pick == 1):
            user = input("\n Select one of aforementioned budgets\n")
            if user in database:
                print("Note: You cannot withdraw all your budget. At least N1 must remain")
                amt = int(input("Enter amount\n"))
                if amt < database[user]:
                    balance = int(database[user])
                    new_balance = Budget.withdraw(user, amt, balance)
                    database[user] = new_balance
                    print("Withdrawal successful")
                    menu()
                else:
                    print("Insufficient balance")
            else:
                print("Budget does not exist")
                
        if (pick == 2):
            print("You have terminated your debit transaction")
            menu()
        else:
            print("\nInvalid option")
            debit()
    def credit():
        print("Deposit into your budget")
        print("Available budgets")
        for key, value in database.items():
            print(f"-   {key}")
        pick == int(input("\nPress (1) to continue with your deposit transaction or (2) to stop deposit transaction:\n ")
        if (pick == 1):
            user = input("Select a budget \n")
            if user in database:
                amt = int(input("Enter amount \n"))
                balance = 
        
    
            
            
            
        
        
            
        
            
            
     
    
     
     
        
    
    
    
